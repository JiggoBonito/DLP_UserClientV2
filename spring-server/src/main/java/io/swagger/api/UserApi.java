/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.19).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.User;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2021-04-19T08:13:45.220Z")

@Validated
@Api(value = "user", description = "the user API")
@RequestMapping(value = "")
public interface UserApi {

    @ApiOperation(value = "authorize a user", nickname = "authorizeUser", notes = "authorize a user", response = User.class, tags={ "user", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success: User is authorized", response = User.class) })
    @RequestMapping(value = "/user/authorize",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<User> authorizeUser(@ApiParam(value = "authorized user " ,required=true )  @Valid @RequestBody User body,@ApiParam(value = "authkey to be used" ,required=true) @RequestHeader(value="authKey", required=true) String authKey);


    @ApiOperation(value = "Create a user object", nickname = "createUser", notes = "create a user and add it to user list", response = User.class, tags={ "user", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success: User is created", response = User.class) })
    @RequestMapping(value = "/user/create",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<User> createUser(@ApiParam(value = "Created user object" ,required=true )  @Valid @RequestBody User body);


    @ApiOperation(value = "Login a user", nickname = "loginUser", notes = "Login a user", response = User.class, tags={ "user", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Success: User is logged in", response = User.class) })
    @RequestMapping(value = "/user/login",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<User> loginUser(@ApiParam(value = "Logged in user " ,required=true )  @Valid @RequestBody User body);

}
